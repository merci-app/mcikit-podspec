// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.8.1 (swiftlang-5.8.0.124.5 clang-1403.0.22.11.100)
// swift-module-flags: -target arm64-apple-ios10.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name MCIProfile
// swift-module-flags-ignorable: -enable-bare-slash-regex
import Alamofire
import Foundation
import MCIFoundation
@_exported import MCIProfile
import Swift
import _Concurrency
import _StringProcessing
extension MCIFoundation {
  final public func requestCustomerNameValidation(firstName: Swift.String, lastName: Swift.String, completion: @escaping MCIResult<Swift.Void>)
  final public func requestCustomerPasswordUpdate(oldPassword: Swift.String?, newPassword: Swift.String?, failure: @escaping (_ error: Foundation.NSError) -> Swift.Void = { _ in }, success: @escaping () -> Swift.Void = {})
  final public func requestCustomerPhoneUpdate(newDDI: Swift.String?, newPhone: Swift.String?, failure: @escaping (_ error: Foundation.NSError) -> Swift.Void = { _ in }, success: @escaping (_ id: Swift.String) -> Swift.Void = { _ in })
  final public func requestCustomerPhoneUpdate(newDDI: Swift.String?, newPhone: Swift.String?, completion: @escaping (Swift.Result<MCIPhoneNumberUpdate, Foundation.NSError>) -> Swift.Void)
  final public func requestCustomerPhoneUpdateConfirmation(id: Swift.String?, sms: Swift.String?, phoneNumber: Swift.String?, failure: @escaping (_ error: Foundation.NSError) -> Swift.Void = { _ in }, success: @escaping () -> Swift.Void = {})
  final public func requestCustomerPhoneUpdateCodeResend(authId: Swift.String?, failure: @escaping (_ error: Foundation.NSError) -> Swift.Void = { _ in }, success: @escaping () -> Swift.Void = {})
  final public func requestCustomerPhoneUpdateResend(authCode: Swift.String?, completion: @escaping (Swift.Result<MCIPhoneNumberUpdate, Foundation.NSError>) -> Swift.Void)
  final public func requestCustomerForgotPassword(cpf: Swift.String?, email: Swift.String?, failure: @escaping (_ error: Foundation.NSError) -> Swift.Void = { _ in }, success: @escaping () -> Swift.Void = {})
  final public func requestCustomerForgotPasswordValidation(uuid: Swift.String?, password: Swift.String?, failure: @escaping (_ error: Foundation.NSError) -> Swift.Void = { _ in }, success: @escaping () -> Swift.Void = {})
}
